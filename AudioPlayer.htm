<!DOCTYPE html>
 <html>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
   <head>
    <title> Audio Player </title>
    <style type="text/css">
#heading1{
        color:rgb(2,151,189) ;
}
#heading2{
        color: rgb(5,172,112) ;
}

h2{
        font-family:monospace;
        position:relative ;
        left:10px;
        top:-5px;
} 

#head{
       background:white;
       position:absolute ;
       top:0;
       left:0px;
       height:50px;
       width:100%;
       border:none ;
       box-shadow:0px 0px 10px;
       z-index:2;
}

.mediaLoadI{
	   position:absolute;
	   top:50px;
	   background:rgb(244, 246,255) ;
	   height:0px;
	   width:90%;
	   left:5.6%;
	   border:none;
	   box-shadow:0px 0px 10px;
	   border-radius:0px 0px 20px 20px;
	   z-index:1;
}
.displayMediaLoad{
       transition:0.6s;
       height:220px;
}

.hideMediaLoad{
       transition:0.6s;
       height:0px;
}

.mediaVanish{
       transition:0.4s;
       opacity:0;
       visibility:hidden ;
}

.mediaVisible{
       transition:0.4s;
       opacity:1;
}

#input,#fileToLoad{
       display:none;
}


#loadLyrics{
       position:relative ;
       padding:10px 80px;
       border:none;
       border-radius:18px;
       background:linear-gradient(to right, rgb(2,151,189), rgb(5,172,112) ) ;
       color:white ;
       letter-spacing:5px;
       font-family:"Lucida Console", Monaco monospace;
       font-weigh:bold;
       outline:none;
}


.mediaLab1{
      position:relative ;
      height:40px;
      width:46%;
      left:-23%;
      display:table;
      color:black;
      background:none ;
      border:1px solid black ;
      line-height:40px;
      border-radius:10px 0px 0px 10px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
} 

.mediaLab2{
       position:relative ;
       height:40px;
       width:46%;
       left:23%;
       top:-42px;
       display:table;
       color:balck;
       background:;
       border:none ;
       border:1px solid black ;
       line-height:40px;
       border-radius:0px 10px 10px 0px;
       font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
} 

#audNlyr{
       position:relative;
       top:20%;
}

#mediaView{
       background:rgba(97,97,97, 232) ;
       position:relative ;
       height:3px;
       width:25px;
       float:right ;
       top:-40px;
       right:15px;
}
#mediaView::after,
#mediaView::before{
       position:absolute ;
       content:"" ;
       height:3px;
       width:25px;
       right:0px;

}
#mediaView::after{
       height:3px;
       width:25px;
       background:rgba(97,97,97, 232) ;
       right:40x;
       top:6px;
}
#mediaView::before{
       height:3px;
       width:25px;
       top:20px;
       background:rgba(97,97,97, 232) ;
       top:12px;
}

@font-face {
         font-family: 'Material Icons';
         font-style: normal;
         font-weight: 400;
         src: url(https://fonts.gstatic.com/s/materialicons/v47/flUhRq6tzZclQEJ-Vdg-IuiaDsNcIhQ8tQ.woff2) format('woff2');
}
         
.material-icons {
         font-family: 'Material Icons';
         font-weight: normal;
         font-style: normal;
         font-size: 24px;
         line-height: 1;
         position:relative ;
         left:69%;
         top:-46px;
         color:rgba(97,97,97, 232);
         outline:none ;
         font-size:31px;
         letter-spacing: normal;
         text-transform: none;
         display: inline-block;
         white-space: nowrap;
         word-wrap: normal;
         direction: ltr;
         -webkit-font-feature-settings: 'liga';
         -webkit-font-smoothing: antialiased;
}

.infobox{
        position:absolute ;
        height:25%;
        width:70%;
        background:white ;
        align:center ;
        top:40%;
        left:14.6%;
        border:3px solid grey;
        border-radius:5px;
        z-index:-1;
        line-height:200px;
        font-weight:bold ;
        font-family:monospace ;
        font-size:15px;
    /*    color:rgb(51,155,51); 
        color:rgb(40, 158,160) ; */
}

.infoBoxHide{
        z-index:-1;
}

.infoBoxVisible{
        z-index:1;
}

#markPlace{
        position:absolute ;
        top:43%;
        left:41%;
} 

#checkMark{
        position:absolute ;
        z-index :2;        
        height:55px;
        width:55px;
        border:3px solid ; 
        border-color:rgba(51,155,51,0.467);
        background:transparent ;
        border-radius:50%;
}
#checkMark::after,
#checkMark::before {
        position:absolute ;
        content:"" ;
        background:rgb(51,155,51) ;
        height:31px;
        width:4px;
        transform:rotate(45deg);
        border-radius:8px 8px 0px 0px;        
        top:11px;
        right:20.8px;
} 
#checkMark::after{
        background:rgb(51,155,51) ;
        height:17px;
        transform:rotate(-45deg);
        border-radius:8px 8px 0px 0px;
        top:23px;
        right:35px;
}

#exclMark{
        position:absolute ;
        z-index :3;        
        height:55px;
        width:55px;
        border:3px solid ; 
        border-color:rgba(225,112,13,0.467);
        background:transparent ;
        border-radius:50%;
}
#exclMark::after,
#exclMark::before{ 
        position:absolute ;
        content:"" ;
        background:rgb(225,112,13) ;
        height:31px;
        width:4px;
        border-radius:8px;     
        top:8px;  
        left:26px;
}
#exclMark::after{ 
        background:rgb(225,112,13) ;
        height:4px;
        height:4px;
        top:43px;
} 

#res{	
       margin-top:-25px;
       margin-left:2.5%;
       background: ghostwhite ;
       height:400px;
       width:95%;
       overflow:scroll ;
       line-height:40px;
       border:none ;
       scroll-behavior:smooth ;
       white-space:pre;
       font-size:13px;
       font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
       z-index:-1;
 }

#res::-webkit-scrollbar{ 
        width:0 ;
}


span{
       color:rgb(54,45,233) ;
       font-weight:bold;
       white-space:normal ;
     }
    
#resTop{
       position:relative ;
       top:-10px;
       background:ghostwhite ;
       height:30px;
       width:100%;
       box-shadow:0px 15px 10px ghostwhite;
}

#resBottom{
      position:relative ;
      top:0px;
      background:ghostwhite;
      height:30px;
      width:100%;
      box-shadow:0px -20px 10px ghostwhite;
} 
   
#lyrPlayRing{
       position:relative ;
       float:right;
       top:197px;
       outline:none ;
       width:14px;
       height:14px;
       border:1px solid black ;
       visibility:hidden ;
       border-radius:50px;
} 
#playBttnArrow{
       position:relative ;
       left:-18px;
       top:203px;
       height:0px;
       width:326px;
       border-style:dotted;
       border-width:3px 0px 0px 0px;
       visibility:hidden ;
       opacity:0.5 
}

#lyrPlayBttn{
       position:relative ;
       left:4.5px;
       top:1.5px;
       height:0px;
       width:2px;
       border-style: solid;
       outline:none;
       border-width: 5px;
       border-color:transparent transparent transparent #202020;
}
#audioLoaded {
       position:relative ;
       visibility:hidden ;
}
#audioDiv{
       position:absolute;
       background:rgb(241,243,244);	
       bottom:0px;
       height:60px;
       left:0px;
       width:100%;
       box-shadow:0px 0px 3px ;
       outline:none ;

}

#audioInfo{
       height:17px;
       
} 

.audioTitileI{
        position:absolute;
        font-size:12px;
        left:20%;
        color:rgb(26,26,26) ;
        font-family:monospace ;
        font-weight:bold;
        width:60%;
        overflow:scroll ;
        height:16px;
        top:0px;
        line-height:18px;
}

.audioTitileI::-webkit-scrollbar{ 
        width:0 ;
}

.moveTitUp{
       transition:0.3s;
       top:-68px;
       height:68px;
       border:none ;
       white-space:pre ;
       background:rgb(241,243,244);	
       box-shadow:0px -1px 1px black ;
       border-radius:10px 10px 0px 0px;
}
.moveTitDown{
       transition:0.3s;
       top:0px;
       height:16px;
} 

.playBttn{
       position:relative ;
       top:10%;
       left:25%;
       width:0px;
       border:13px solid black ;
       border-color:transparent transparent transparent black;
}

#forPlayBttn{ 
       position:relative ;
       background:none;
       height:35px;
       width:35px;
       border:1.5px solid black ;
       border-radius:50px;
       top:-2px;
       right:43%;
       z-index:3;
} 

.pauseBttn{
        position:relative ;
        top:16%;
        left:23%;
        outline:none;
        z-index:3;
        background:none;
        height:23px;
        width:30px;
        border:18px double black;
        border-width:0px 0px 0px 19px;
}

#rngDiv{
        position:relative ;
        height:30px;
        width:100%;
        background:none;
        top:-37px;
}

#currentTym{
        position:absolute;
        font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        left:15%;
        top:45%;
        font-size:11px;
        z-index:1;
}
#duration{
        position:absolute;
        font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        font-size:11px;
        z-index:1;
        left:89%;
        top:45%;
} 

#audRange{
         -webkit-appearance:none ;
         position:relative ;
         top:3px;
         left:6%;
         height:20px;
         width:85%;
         border:1px dotted black;
         border-radius:8px ;
         overflow:hidden ;
         outline:none ;
         background:rgba(169,178,197, 0.475) ;
}
::-webkit-slider-thumb{
        -webkit-appearance:none ;
        height:0px;
        width:0px;
        background:none;
        border-radius:8px;
        box-shadow:-160px 0 0 160px rgba(75, 174, 227, 0.553) ;
} 
       
.menuDivI{
        position:absolute ;
        height:85%;
        width:0%;
        background:ghostwhite;
        box-shadow:0px 0px 3px;
        top:65px;
        right:0px;
        border-radius:20px 0 0 20px;
        z-index:2;
}
.menuVis{
        transition:0.1s;
        width:75%;
} 
    </style>
  
  </head>
   <body bgcolor="ghostwhite" >
   
           <div id="menuDiv" class="menuDivI"  >
               <label>Your Name</label>
               <input type="text" >
           </div>
           
    <div id="head" >
      <h2 align="left"><span id="heading1" >Audio</span><span id="heading2" >Player</span></h2>
      
      <i class="material-icons" onclick="viewMedia()" onchange="hideMedia()">attachment</i>

      
       <div id="mediaView" onclick="controlMenu()"></div>
    </div> <br><br><br>
   <center>
   <div id="mediaLoad" class="mediaLoadI" >

    <div id="audNlyr" >
    <label class="mediaLab1" id="mediaLab1"  >Select Audio File
      <input type="file" id="input" class="tiTle" name="title" accept="audio/*" />
     </label>
     <label class="mediaLab2" id="mediaLab2" > Select LRC File
      <input type="file" id="fileToLoad"> 
     </label>
     <input type="button" id="loadLyrics"  value="Load Lyrics" onclick="loadFileAsText()">
    </div>
   </div>
   
   
             <div id="markPlace" >
               
            </div>
              <div id="infoBox" class="infobox" ></div>
      
      
      <!--
           <audio id="audioLoaded"  controls>
             <source src="NewOne.ogg" type="audio/ogg">
             <source src="NewOne.mp3" type="audio/mpeg">
          </audio>
      -->
      <input type="text" id="tym" hidden>
  
      <textarea id="test1" hidden></textarea><textarea id="test2" hidden></textarea>
    
           <div id="lyrPlayRing" onclick="PlayByLyrics()" >
            <div id="lyrPlayBttn"> 
            </div>
           </div>
           
          <div id="playBttnArrow" ></div>
         
           <div id="resTop" ></div>
            <div id="res" onscroll="divScroll()"></div> 
           <div id="resBottom" ></div>
              
          
             <div id="audioDiv" > <div id="hideTit" ></div>
             	<div id="audioInfo" >
                 <div id="audioTitile" class="audioTitileI"  onclick="showLyricsDetails()"></div>
                </div>
                  <div id="forPlayBttn" >
                    <div id="playBttn" class="playBttn"  onclick="playaudio()"></div>
                  </div>
                   <label id="currentTym" ></label> 
                   <label id="duration" ></label>
                   <div id="rngDiv" >
                      <input type="range" id="audRange" min="0" value="0" >
                   </div>
               <audio id="audioLoaded" name="autit" ></audio>
             </div> 
           
<textarea id="first" placeholder="first" hidden></textarea> <textarea id="lyricsLoaded" hidden></textarea>

    </center>
     <script>
    hideMedia() ;
    
   
   var startPlay, rngAud, tymOnRangeFun;
   
    input.onchange = function(e)
    {
         var sound = document.getElementById('audioLoaded');
         sound.src = URL.createObjectURL(this.files[0]);
         sound.onend = function(e)
         {
             URL.revokeObjectURL(this.src);
         }
         var lett = 'Audio Added SUCCESSFULLY' ;
         callInfoBox(lett) ;
    }
   
    function loadFileAsText()
    {
        var lrcName = document.getElementById('fileToLoad').value ;
        if(lrcName != '' )
        {
            if(lrcName.substring(lrcName.length-3) == 'lrc' )
            {
        
                if(document.getElementById('first').value == '' )
                {
                     var fileToLoad = document.getElementById("fileToLoad").files[0];
 
                     var fileReader = new FileReader();
                     fileReader.onload = function(fileLoadedEvent)
                     {
                         var textFromFileLoaded = fileLoadedEvent.target.result;
                         document.getElementById('lyricsLoaded').value = textFromFileLoaded;
                      };
                      fileReader.readAsText(fileToLoad, "UTF-8");
                      var remHead = setTimeout(removeHeading, 100);
                      var lett = 'Lyrics Add SUCCESSFULL' ;
                      callInfoBox(lett) ;
                      hideMedia() ;
                 }
                 else
                {
                      var lett = 'File Already Selected' ;
                      var colorCode = 0;
                      callInfoBox(lett, colorCode) ;
                }
             }
            else
            {
                  var lett = 'Wrong File Selected!' ;
                  var colorCode = 0;
                 callInfoBox(lett, colorCode) ;
            }
        }
        else
        {
             var lett = 'No File Selected!' ;
             var colorCode = 0;
             callInfoBox(lett, colorCode) ;
        } 
    }
   
   
     function removeHeading()
     {
         var headInd, headLyr;
         headLyr = document.getElementById('lyricsLoaded').value ;
         headInd = headLyr.indexOf('[00') ;
         document.getElementById('first').value = headLyr.substring(headInd).trim() ;
          printAudioName() ;
     }
    
         function callInfoBox(cont, colr)
         {

             document.getElementById('infoBox').innerHTML = '' ;
             document.getElementById('infoBox').classList.remove('infoBoxHide') ;
             document.getElementById('infoBox').classList.add('infoBoxVisible') ;

             if(colr == 0)
             {
                  document.getElementById('markPlace').innerHTML = '<div id="exclMark" ></div>' ;
             }
             else
             {
                  document.getElementById('markPlace').innerHTML = '<div id="checkMark" onclick="closeInfoBox()"></div>' ;
             }
             
             document.getElementById('infoBox').innerHTML += cont ;
             var closeInfo = setTimeout(closeInfoBox, 1550);
         }
        
        function closeInfoBox()
        { 
             document.getElementById('infoBox').classList.remove('infoBoxVisible') ;
             document.getElementById('infoBox').classList.add('infoBoxHide') ;
             document.getElementById('markPlace').innerHTML = '' ;
        }
    
     var audioFile = document.getElementById('audioLoaded') ;

     var elem = document.getElementById('res') ;
   
         function audioTime()
         {
             document.getElementById('tym').value = audioFile.currentTime ;
         }
        
        function viewMedia()
       {
            if(document.getElementById('mediaLoad').clientHeight < 5) 
           {
               document.getElementById('mediaLab2').classList.remove('mediaVanish');
               document.getElementById('mediaLab2').classList.add('mediaVisible') ;
               document.getElementById('mediaLab1').classList.remove('mediaVanish');
               document.getElementById('mediaLab1').classList.add('mediaVisible') ;
               document.getElementById('loadLyrics').classList.remove('mediaVanish') ;
               document.getElementById('loadLyrics').classList.add('mediaVisible') ;
               document.getElementById('mediaLoad').classList.remove('hideMediaLoad') ;
               document.getElementById('mediaLoad').classList.add('displayMediaLoad');
           }
          else
          hideMedia() ;   
       }
     
        function hideMedia()
        {
            document.getElementById('mediaLab2').classList.remove('mediaVisible') ;
            document.getElementById('mediaLab2').classList.add('mediaVanish');
            document.getElementById('mediaLab1').classList.remove('mediaVisible') ;
            document.getElementById('mediaLab1').classList.add('mediaVanish');
            document.getElementById('loadLyrics').classList.remove('mediaVisible') ;
            document.getElementById('loadLyrics').classList.add('mediaVanish') ;
            document.getElementById('mediaLoad').classList.remove('displayMediaLoad') ;
            document.getElementById('mediaLoad').classList.add('hideMediaLoad') ;
        } 
      
       function playaudio()
       {
              if(audioFile.paused)
              {
                   audioFile.play() ;
                   rngAud = setInterval(setAudioRange, 1);
                   TymOnRangeFun = setInterval(timeOnRange, 1) ;                   
                   document.getElementById('playBttn').classList.remove('playBttn') ;
                   document.getElementById('playBttn').classList.add('pauseBttn') ;
                   document.getElementById('lyrPlayRing').style.visibility = 'hidden' ;
                   document.getElementById('playBttnArrow').style.visibility = 'hidden' ;
                   if(document.getElementById('res').innerHTML == '' )
                   {
                        synch() ;
                   } 
                   startPlay = setInterval(mainFunction, 900);
                  
                  document.getElementById('rngDiv').innerHTML = '<input type="range" id="audRange" min="0" max="' + audioFile.duration + '" oninput="pauseRange()" onchange="restartRange()">' ;
              }
              else
              pauseaudio() ;
             
               hideMedia() ;
          }
       
  
      function pauseaudio()
      {
          document.getElementById('playBttn').classList.remove('pauseBttn') ;
          document.getElementById('playBttn').classList.add('playBttn') ;
          audioFile.pause();
          window.clearInterval(startPlay) ;
          window.clearInterval(TymOnRangeFun) ;
      }
   
         var auto = setInterval(autoPause, 100);
         
        function autoPause()
        {
              if(audioFile.paused && audioFile.currentTime == audioFile.duration)
              {
                  pauseaudio() ;
              }
        } 
        
       function synch()
       {
            if(document.getElementById('first').value != '')
            {
                 document.getElementById('first').value = '<b<br><br><br><br><br><br>\n' + document.getElementById('first').value + '<br><br><br><br><br>\n--END--' ;
            }
       } 

       function mainFunction()
       {
           var posI = audioFile.currentTime ;        
           var sec,secI,min,minI,pos;
           pos = Math.floor(posI)
           minI=pos/60;
           min=Math.floor(minI);
           secI=pos-min*60;
           sec=Math.floor(secI);

           var audTym ;
           if(min <= 9)
           {
              min = '0' + min;
           }
           if(sec <= 9)
           {
               sec = '0' + sec;
           }
           audTym = min + ':' + sec ;
        //   alert(audTym) ;
        
        copy = document.getElementById('first').value ;
        var flag = 1 ;
        while(document.getElementById('first').value.indexOf('\n') > 0)
        {
             var secLyr, secInd, secLine;
             secLyr = document.getElementById('first').value ;
             secInd = secLyr.indexOf('\n') ;
             secLine = secLyr.substring(0, secInd) ;
         
             if(secLine.indexOf(audTym) >= 0)
             {
                  var mark = flag ;    
                  document.getElementById('tym').value = mark;          
             }
             else
             flag ++ ;          
            
            document.getElementById('first').value = document.getElementById('first').value.substring(document.getElementById('first').value.indexOf('\n')).trim() ;
        }
        document.getElementById('first').value = copy ;
        enRollData() ;
          
     
   }
  
  function enRollData()
  {
      document.getElementById('res'). innerHTML = '' ;
      var keepCopy = document.getElementById('first').value ;
      var count;
      count = 1;
      num = Number(document.getElementById('tym').value) ;
      
      while(document.getElementById('first').value.indexOf('\n') > 0)
      {
             var divLyr, divInd ;
             divLyr = document.getElementById('first').value ;
             divInd = divLyr.indexOf('\n') ;
       
             if(num == count)
             {
          
                 document.getElementById('res').innerHTML += '<span>' + divLyr.substring(10, divInd) + '</span><br>' ;
             }
            else
            document.getElementById('res').innerHTML += divLyr.substring(10, divInd) + '<br>' ;
  
           document.getElementById('first').value = document.getElementById('first').value.substring(document.getElementById('first').value.indexOf('\n')).trim() ;
           count++ ;
      }
     document.getElementById('first').value = keepCopy ;
  
     var no = Number(document.getElementById('tym').value) ;
     no = no - 1;
     elem.scrollTop = no*40 ;
   }
  
      function divScroll()
      {
           if(audioFile.paused)
           {
              document.getElementById('lyrPlayRing').style.visibility = 'visible' ;
              document.getElementById('playBttnArrow').style.visibility = 'visible' ;
           } 
      } 
     
     function PlayByLyrics()
     {
          var scrollVal = elem.scrollTop ;
          var line, lineNum;
          line = scrollVal / 1.33333333 ;
          line = Math.floor(line) ;
          lineNum = Math.floor((line/30) + 1) ;
          var cunt = 1;
          var copied = document.getElementById('first').value ;
          while(document.getElementById('first').value.indexOf('\n') > 0)
          {
              var playLyr, playInd, playLine;
              playLyr = document.getElementById('first').value ;
              playInd = playLyr.indexOf('\n') ;
              playLine = playLyr.substring(0,playInd) ;
              if(cunt == lineNum)
              {
                  var playMin, playSec;
                  playMin = Number(playLine.substring(1,3)) ;
                  playSec = Number(playLine.substring(4,6)) ;
              }
              document.getElementById('first').value = document.getElementById('first').value.substring(document.getElementById('first').value.indexOf('\n')).trim() ;
              cunt++ ;
          }
          document.getElementById('first').value = copied ;
          audioFile.currentTime = (playMin*60) + playSec;
          playaudio() ;
     }
    
      function printAudioName()
      { 
            var audLyr, audName ;
            audLyr = document.getElementById('lyricsLoaded').value ;
            audName = audLyr.substring(audLyr.indexOf('[ti') +4, audLyr.indexOf(']') ) ;
            document.getElementById('audioTitile').innerHTML =  audName ;
      }
     
      function showLyricsDetails()
      {
              document.getElementById('audioTitile').classList.remove('moveTitDown') ;
              document.getElementById('audioTitile').classList.add('moveTitUp') ;
             
             var moveTitdown = setTimeout(function() {
             document.getElementById('audioTitile').classList.remove('moveTitUp') ;
             document.getElementById('audioTitile').classList.add('moveTitDown') ;
             document.getElementById('audioTitile').scrollTop = 0 ;
             printAudioName() ; }, 3000) ;
            
             var lyrAuth, lyrTit, lyrCr, lyrAlb,lyrRe, lyrMain;
             var authLine, titLine, crLine, albLine, reLine;
             lyrMain = document.getElementById('lyricsLoaded').value ;
              if(lyrMain.indexOf('[ti') > -1)
              {
                    titLine = lyrMain.substring(lyrMain.indexOf('[ti')+4);
                    lyrTit = titLine.substring(0,titLine.indexOf(']')) ;
              }
              else
              lyrTit = 'unknown' ;
             
               if(lyrMain.indexOf('[au') > -1)
               {
                   authLine = lyrMain.substring(lyrMain.indexOf('[au')+4) ;
                   lyrAuth = authLine.substring(0,authLine.indexOf(']')) ;
               }
               else
               lyrAuth = 'unknown' ;
              
               if(lyrMain.indexOf('[by') > -1)
               {
                    crLine = lyrMain.substring(lyrMain.indexOf('[by')+4) ;
                    lyrCr = crLine.substring(0, crLine.indexOf(']')) ;
               }
               else
               lyrCr = 'unknown' ;
              
               if(lyrMain.indexOf('[al') > -1)
               { 
                      albLine = lyrMain.substring(lyrMain.indexOf('[al')+4) ;
                      lyrAlb = albLine.substring(0,albLine.indexOf(']')) ;
               }
               else
               lyrAlb = 'unknown' ;
              
               if(lyrMain.indexOf('[re') > -1)
               {
                       reLine = lyrMain.substring(lyrMain.indexOf('[re')+4 ) ;
                       lyrRe = reLine.substring(0, reLine.indexOf(']') ) ;
               }
               else
               lyrRe = 'unknown' ;
               
              document.getElementById('audioTitile').innerHTML = 'Titile: ' + lyrTit + '<br>Author: ' + lyrAuth + '<br>Album: ' + lyrAlb + '<br>Created: ' +lyrCr + '<br>Editor: ' + lyrRe ;
               
      }
      
        function setAudioRange()
        {
              document.getElementById('audRange').value = audioFile.currentTime ;
        }
       
        function pauseRange()
        { 
              window.clearInterval(rngAud) ;
              window.clearInterval(startPlay) ;
        }
       
        function restartRange()
        {
             audioFile.currentTime = document.getElementById('audRange').value ;
             audioFile.pause() ;
             playaudio() ;
        }

       function timeOnRange()
       {
            var crntPosI, post;
            if(document.getElementById('duration').innerHTML == '')
            {
                  crntPosI = audioFile.duration ;
                  post = 1;
            }
            else
            {  
                 crntPosI = audioFile.currentTime ;    
            } 
                 var seC,seCI,miN,miNI,crntPos;
                 crntPos = Math.floor(crntPosI)
                 miNI=crntPos/60;
                 miN=Math.floor(miNI);
                 seCI=crntPos-miN*60;
                 seC=Math.floor(seCI);
            
  
                  if(miN <= 9)
                  {
                        miN = '0' + miN;
                  }
                  if(seC <= 9)
                  {
                        seC = '0' + seC;
                  }
                  if(post == 1)
                  {  
                        document.getElementById('duration').innerHTML = miN+':'+seC ;
                  }
                  else
                  {  
                       document.getElementById('currentTym').innerHTML = miN +':'+seC;
                  } 
              
       } 
     
     function controlMenu()
     {
           alert('This feature is not yet completed!' )
         
     // document.getElementById('menuDiv').classList.add('menuVis') ;
     } 
     
      window.onscroll = function () 
      {
           window.scrollTo(0,0);
           
      }
     </script>
   </body>
   <!-- For Her -->
 </html>